services:
  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    healthcheck:
      test: ["CMD", "zkServer.sh", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: bitnami/kafka:2.8.1
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      ALLOW_PLAINTEXT_LISTENER: "yes"
    volumes:
      - kafka_data:/bitnami/kafka
    depends_on:
      zookeeper:
        condition: service_healthy

  spark:
    # Use 'build' instead of 'image' to build from Dockerfile
    build:
      context: . # Build context is the current directory (where Dockerfile is)
      dockerfile: Dockerfile # Name of your Dockerfile
    ports:
      - "4040:4040"
    environment:
      HOME: /root
      SPARK_DEFAULTS_CONFIG: ${SPARK_DEFAULTS_CONFIG}
    volumes:
      - .:/app # Mount your local project directory to /app inside the container
    working_dir: /app
    entrypoint: ["sleep", "infinity"]
    user: root

volumes:
  kafka_data: {}
